* Nano
- ^S :: Save file without prompting
- M-A :: Mark text starting from the cursor position
- M-6 :: Copy the curren line and store it in the cutbuffer
- ^U :: Paste
- ^K :: Cut the current line and store it in the cutbuffer


- M-U :: Undo the last operation
- M-E :: Redo the last undone operation

- ^\ (M-R) ::  Replace a string or a regular expression
- ^W :: Search forward for a string or a regular expression
- ^Q :: Search backward for a string or a regular expression
- M-W :: Repeat the last search

- M-- :: Scroll up one line without scrolling the cursor
- M-+ :: Scroll down one line without scrolling the cursor

- M-/ :: Go to the first line of the file
- M-\ :: Go to the last line of the file

- ^T: : Invoke the spell checker, if available

- ^C :: Display the position of the cursor
- ^_ (M-G) :: Go to line and column number

- M-3 :: Comment/uncomment the current line (or marked lines)
- ^] :: Try and complete the current word

- M-$ :: Soft wrapping of overlong lines enable/disable

- M-Z :: Suspension enable/disable


** Buffer
- M-< :: Switch to the previous file buffer
- M-> :: Switch to the next file buffer

* Emacs
- C-o :: para dejar espacio abajo, sin mover el punto actual
- C-x C-x :: (exchange-point-and-mark) Por ejemplo, haz una C-s y
             busca algo hacia adelante. Presione RET para salir de la
             búsqueda, luego C-x C-x para marcar todo desde donde
             comenzó la búsqueda
- C-x C-o :: Eliminar saltos de linea alrededor de la linea actual
- ESQ-^ :: Unir dos lineas quitando el salto de linea entre ambos
- C-_ :: Deshacer
- C-g C-_ :: Rehacer
- C-u N :: valor de argumento prefijo de un comando. Repite el comando
           N veces. Para dar valores negativos se escribe: =C-- N
           <COMANDO>=

** Resaltado Interactivo
El modo RESALTAR CAMBIOS es un modo menor que "resalta" las partes del
búfer que se cambiaron más recientemente, dándole a ese texto una cara
diferente. Para habilitar o deshabilitar el modo de cambios de
resaltado, use 'M-x highlight-changes-mode'

- M-s h r REGEXP <RET> FACE <RET> :: Resaltar texto que coincide con
     REGEXP usando la cara FACE. Mientras estamos en el prompt se
     puede usar =M-n= y =M-p= para ciclar a travez de todas las caras
- M-s h u REGEXP <RET> :: Des-resaltar REGEXP. Mostrará la expresión
     regular agregada más recientemente; use 'M-n' para mostrar la
     siguiente expresión anterior y 'M-p' para seleccionar la
     siguiente expresión más nueva
- M-s h l REGEXP <RET> FACE <RET> :: Resalte líneas completas que
     contengan una coincidencia para REGEXP
- M-s h p PHRASE <RET> FACE <RET> :: Resalte coincidencias de PHRASE,
     usando face FACE
- M-s h . :: Resalte el símbolo que se encuentra cerca del punto,
             usando la siguiente cara disponible
- M-s h w :: Inserte todos los pares de expresiones regulares/caras
             resaltados actuales en el búfer en el punto, con
             delimitadores de comentarios para evitar que cambien su
             programa
- M-s h f :: Extraer pares de regexp/face de los
             comentarios en el búfer actual

** Org mode
- C-c ' :: editor de formulas
- C-c ? :: mostrar referencia de actual celda en el minibuffer
- C-c } :: dibujar referencias @ROW$Col de la tabla
- C-c C-q :: agregar tag a un headline
- C-c C-c :: interfaz en el minibuffer para editar tags
  + <TAB> :: autocompletado de tags
  + <RET> :: aceptar la modificacion del conjunto
  + C-g :: abortar sin instalar los cambios
  + q :: Si 'q' no esta asignado a un tag, aborta como 'C-g'
  + ! :: Desactive los grupos de etiquetas mutuamente
         excluyentes. Utilice esto para (como excepción) asignar
         varias etiquetas de dicho grupo.

** Programacion
- M-A :: retroceder por parrafos de codigo
- M-E :: avanzar por parrafos de codigo
- M-x hs-minor-mode :: para esconder y mostrar bloques de codigo
  + C-c @ C-h :: esconder
  + C-c @ C-s :: mostrar
  + C-c @ C-c :: esconder o mostrar el bloque actual
- M-x which-function-mode :: modo menor para mostrar el nombre de la funcion actual
- C-M-k :: kill la expresion balanceada de adelante
- C-x C-q :: hacer el buffer acutal de solo lectura
- C-x C-r :: abrir un archivo como solo de lectura

** Window
- C-M-v :: Scroll el proximo window, al que saltaria con =C-x o=
- C-x 4 b BUFNAME <RET> :: seleccionar buffer BUFNAME en otro window
- C-x 4 C-o BUFNAME <RET> :: Mostrar BUFNAME in algun window, sin
     seleccionarlo
- C-x 4 f FILENAME <RET> :: Visitar FILENAME y seleccionar su buffer
     en otro window
- C-x 4 d DIRECTORY <RET> :: Seleccionar un buffer Dired para
     DIRECTORY en otro window
- C-x 4 r FILENAME <RET> :: Visitar archivo FILENAME read-only y
     seleccionar su buffer en otro window.
- C-x ^ :: hacer mas alto el window seleccionado. Con un prefijo
           negativo reduce la altura
- C-x } :: hacer mas ancho el window seleccionado
- C-x { :: hacer mas angosto el window seleccionado
- C-x - :: Reduzca esta ventana si su búfer no necesita tantas líneas
- C-x + :: Haga que todas las ventanas tengan la misma altura
     Make all windows the same height (‘balance-windows’).

** Frame
- C-x 5 2 :: Crear un nuevo frame
- C-x 5 b BUFNAME <RET> :: Seleccionar buffer BUFNAME en otro frame
- C-x 5 f FILENAME <RET> :: Visitar archivo FILENAME y seleccionarlo
     en otro frame
- C-x 5 d DIRECTORY <RET> :: Seleccionar un buffer Dired para
     DIRECTORY en otro frame
- C-x 5 r FILENAME <RET> :: Visitar archivo FILENAME read-only y
     seleccionar su buffer en otro window.
- C-x 5 0 :: Eliminar frame seleccinado. 
- C-z :: Minimizar el frame Emacs seleccionado
- C-x 5 o :: Seleccionar otro frame, y levantarlo. Si repites este
             comando, ciclo a travez de todos los frames en su terminal
- C-x 5 1 :: Eliminar todos los frames en la actual terminal, excepto
             este seleccionado.
- M-<F10> :: alternar el estado de maximizacion del actual
             frame. Cuando un frame es maximizado, llena la pantalla.
- <F11> :: alternar modo full-screen para el actual frame

** Busquedas
- M-s . :: (codigo) Inicie una búsqueda incremental de símbolo hacia
           adelante con el símbolo encontrado cerca del punto agregado
           inicialmente a la cadena de búsqueda.
- M-s _ :: (codigo) Si la búsqueda incremental está activa, cambie el
           modo de búsqueda de símbolos. De lo contrario, comience una
           búsqueda de símbolo de avance incremental
- M-s w :: (palabra) Si la búsqueda incremental está activa, cambie el
           modo de búsqueda de palabras; de lo contrario, comience una
           búsqueda progresiva de palabras hacia adelante.

** Projectile
el primer paso para que funcione usando git con =git init=

Para ignorar un archivo/carpeta para un proyecto en particular tu
puedes crear un archivo =.projectile= en la raiz del proyecto y
agregar las rutas a ignorar con el prefijo =-=, algo como
#+BEGIN_EXAMPLE
-/carpeta-a-ignorar
#+END_EXAMPLE

- C-c p a :: Switch between files with the same name but different
             extensions. Lo he usado para cambiar entre headers (.h) y
             sus implementaciones (.c)
- C-c p 4 a :: lo mismo que el anterior pero abre en otro buffer
- C-c p C-h :: listar los comandos de projectile
- M-x projectile-purge-file-from-cache :: purge an individual file
     from the cache
- M-x projectile-purge-dir-from-cache :: purge an entire directory
     from the cache
- C-c p c :: ejecuta =projectile-compile-project=. Agregar el comando
             para compilar. Por default esta ubicado en /build/ en la
             raiz del proyecto. En teclars es
- C-c p m :: projectile-commander deja escojer entre varios comandos,
             por ejemplo si se escoje =v= muestra informacion sobre el
             control de versiones del proyecto (git).
- C-c p v :: Abre un modo para control de versiones para el proyecto

** Remplazos
- \(\w+\) -> \,(upcase \1) :: mediante =(C-M %)= converte palabras a
     mayusculas
** Ido
- C-j :: tomar literalmente el texto cuando C-x C-f sin tomar sugerencias
- C-r :: poner el ultimo elemento al principio de la lista
- M-k :: Eliminar el directorio actual del historial de directorios
- C-x C-f/C-f :: Fallback to non-Ido version of current command.
- M-o :: Cycle to previous file in work file history.
- C-M-o	:: Cycle to next file in work file history.
- C-d :: abrir carpeta especifica con Dired mode
- M-p :: Ir a carpeta previa en el historial de directorios
- M-n :: Ir a carpeta next en el historial de directorios
- M-s :: Buscar para el archivo en el historial de directorios
- M-f :: Prompt for a file and use find to locate it.
- M-d :: Prompt for a directory and use find to locate it.
- M-m :: Prompt for a directory to create in current directory.
- C-t :: Toggle regexp searching.
- C-p :: Toggle between substring and prefix matching.
- C-c :: Toggle case-sensitive searching of file names.

** Dired
- j :: salta al archivo preguntado en el minibuffer
- C-o :: Abrir archivo actual en otra ventana sin mover el cursor de
         dired
- % m REGEXP <RET> :: marcar todos los que coincidan con REGEXP
- C-u k :: en el header del subdirectorio, remueve al directorio
           listado
- C-u C-<SPC> :: retorna a la posicion previa en el buffer Dired
- w :: pone los nombres de de los archivos marcados (or next N) dentro
       del kill ring separados por espacios. Con un prefijo argumento
       cero, copia las rutas absolutas de los archivos marcados. Con
       'C-u' como argumento prefijo, usa los nombres relativos del
       directorio default del buffer Dired
- C-x u :: rehacer las marcas anteriores. Tambien se puede hacer con C-/

* Ubuntu
** Archivos de configuracion
- /etc/bash.bashrc :: algunas variables de entorno (oracle) estan aqui
- /etc/profile :: aqui variables de entorno de java y PS1 para el prompt

** Comandos
- ls Screenshot*|sed 's/\(.\).\(.*\)/mv & \1\2/'|sh :: renombrar
     archivos, que comienzan con Screenshot, quitandole el segundo
     caracter.
  + & :: es el nombre del archivo original
  + tip :: hay dos formas de escribir ER's en Sed: Basico (default) y
           Extendido (opcion -E); la unica diferencia es el
           comportamiento de ? + {} y |. En el basico estos caracteres
           no son especiales y para que lo sean se debe escapar \. En
           el extendido, por el contrario, estos son especiales y para
           indicar que son literales se debe escapar \
- rename -n 's/(.).(.*)/$1$2/' Screenshot* :: lo mismo que
     anterior. Observar que para hacer referencia a algun match se usa
     $1 en vez de \1 como en sed. Quitar la opcion -n para ejecutarlo.
- rename -n 'our $i; s/.*/sprintf("_%03d.png", $i++)/e' *.png :: renombrar
     todos los archivos png numerando de 0 hasta el numero de archivos
     actuales
- find <dir> -name *~ -delete :: delete recursively all *~ files
     within <dir>

* Git
** Como Agregar mas archivos a commit previo
Si ya le commit y quiero agregar mas archivos modificados o nuevos
antes de hacer push.

#+BEGIN_SRC sh
$git add nuevo-archivo
$git commit --amend
#+END_SRC

Luego se puede hacer el push normalmente. Se abrira nano, si estamos
usando la consola, para poder editar el mensaje y descripcion del commit


* fin
# Local Variables:
# mode: org
# End:
